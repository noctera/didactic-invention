name: Deploy

on:
  push:
    branches: [main, experimental]

env:
  DOCKER_PLATFORMS: linux/amd64,linux/arm/v7,linux/arm64/v8 #linux/s390x,linux/ppc64le

jobs:
  build: 
    name: üîß build
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
      tag: ${{ steps.version.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: 14

      # - name: Install dependencies
      #   run: npm i

      # - name: Test
      #   run: npm run lint -- --max-warnings=0

      - name: Extract version
        id: version
        run: |
          mv package.json package.json.bak
          npm i --no-save --no-package-look @actions/core
          mv package.json.bak package.json
          set -x
          node -e "
            const core = require('@actions/core')
            const { version } = require('./package.json');
            const branch = process.env.GITHUB_REF.split('refs/heads/')[1];
          
            const tag = !version.includes('rc') && branch === 'main' ? 'latest'
              : version.includes('rc') && branch === 'experimental' ? 'rc' : null;
          
            if (!tag) {
              core.setFailed('you may forgot to remove the rc label');
              process.exit(1);
            }
          
            core.setOutput('version', version);
            core.setOutput('tag', tag);
          "

  npm:
    name: üì¶ npm
    needs: build
    runs-on: ubuntu-latest
    if: false
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Publish to npm
        uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_TOKEN }}
          tag: ${{ needs.build.outputs.tag }}

      - name: Change scope
        env:
          INPUT_TOKEN: ""
        run: npm init --scope=luwol03 -y

      - name: Publish to gpr
        uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          registry: https://npm.pkg.github.com/
          tag: ${{ needs.build.outputs.tag }}

  docker:
    name: üêã docker
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: ["linux/amd64"] # "linux/arm/v7", "linux/arm64/v8" ]  #, "linux/s390x", "linux/ppc64le"
  
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            luwol03/vocascan-server
            ghcr.io/luwol03/vocascan-server
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}},value=${{ needs.build.outputs.version }}
            type=semver,pattern={{major}}.{{minor}},value=${{ needs.build.outputs.version }}
            type=semver,pattern={{major}},value=${{ needs.build.outputs.version }}
            type=sha

      - run: echo "${{ toJSON(steps) }}"

      # :latest
      # 
      # :1.0.0
      # :1.0.0-rc.1
      # 
      # :pr-1
      # :experimental
      # :my-feature


      #- name: Set up QEMU
      #  uses: docker/setup-qemu-action@v1
      #
      #- name: Set up Docker Buildx
      #  uses: docker/setup-buildx-action@v1
      #
      #- name: Cache Docker layers
      #  uses: actions/cache@v2
      #  with:
      #    path: /tmp/.buildx-cache
      #    key: ${{ runner.os }}-buildx-${{ matrix.platform }}-${{ github.sha }}
      #    restore-keys: ${{ runner.os }}-buildx-${{ matrix.platform }}-
      #
      #- name: Build
      #  uses: docker/build-push-action@v2
      #  with:
      #    context: .
      #    file: ./Dockerfile
      #    platforms: ${{ matrix.platform }}
      #    push: false
      #    tags: |
      #      luwol03/vocascan-server:${{ needs.build.outputs.tag }}
      #      ghcr.io/luwol03/vocascan-server:${{ needs.build.outputs.tag }}
      #    cache-from: type=local,src=/tmp/.buildx-cache
      #    cache-to: type=local,dest=/tmp/.buildx-cache,mode=max
      #
      #- name: Login to DockerHub
      #  uses: docker/login-action@v1
      #  with:
      #    username: ${{ secrets.DOCKERHUB_USERNAME }}
      #    password: ${{ secrets.DOCKERHUB_TOKEN }}
      #
      #- name: Login to ghcr
      #  uses: docker/login-action@v1
      #  with:
      #    registry: ghcr.io
      #    username: ${{ github.repository_owner }}
      #    password: ${{ secrets.GITHUB_TOKEN }}
      #
      #- name: Build
      #  uses: docker/build-push-action@v2
      #  with:
      #    context: .
      #    file: ./Dockerfile
      #    platforms: ${{ matrix.platform }}
      #    push: true
      #    tags: |
      #      luwol03/vocascan-server:${{ needs.build.outputs.tag }}
      #      ghcr.io/luwol03/vocascan-server:${{ needs.build.outputs.tag }}
      #    cache-from: type=local,src=/tmp/.buildx-cache
      #    cache-to: type=local,dest=/tmp/.buildx-cache,mode=max    
